name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  bootstrap:
    name: Terraform Bootstrap
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Build and Push Docker image
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker-compose build fastapi-app
        docker-compose push fastapi-app
        echo "::set-output name=tag::$(date +%s)"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Check if S3 bucket exists
      id: check-bucket
      run: |
        if aws s3 ls "s3://zee-terraform-state-bucket" > /dev/null 2>&1; then
            echo "::set-output name=exists::true"
        else
            echo "::set-output name=exists::false"
        fi

    - name: Terraform Init (Bootstrap)
      if: steps.check-bucket.outputs.exists == 'false'
      run: |
        cd bootstrap
        terraform init

    - name: Terraform Apply (Bootstrap)
      if: steps.check-bucket.outputs.exists == 'false'
      run: |
        cd bootstrap
        terraform apply -auto-approve

  deploy:
    name: Terraform Deploy Main Config
    runs-on: ubuntu-latest
    needs: bootstrap

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init (Main)
      run: |
        cd terraform
        terraform init
      env:
        AWS_DEFAULT_REGION: us-west-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Plan (Main)
      run: |
        cd terraform
        terraform plan
      env:
        AWS_DEFAULT_REGION: us-west-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Terraform Plan (Main)
      run: |
        cd terraform
        terraform apply -auto-approve
      env:
        AWS_DEFAULT_REGION: us-west-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}